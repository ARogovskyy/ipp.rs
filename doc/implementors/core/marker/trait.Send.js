(function() {var implementors = {};
implementors["ipp"] = [{"text":"impl Send for IppAttribute","synthetic":true,"types":[]},{"text":"impl Send for IppAttributeGroup","synthetic":true,"types":[]},{"text":"impl Send for IppAttributes","synthetic":true,"types":[]},{"text":"impl Send for IppOperationBuilder","synthetic":true,"types":[]},{"text":"impl Send for PrintJobBuilder","synthetic":true,"types":[]},{"text":"impl Send for GetPrinterAttributesBuilder","synthetic":true,"types":[]},{"text":"impl Send for CreateJobBuilder","synthetic":true,"types":[]},{"text":"impl Send for SendDocumentBuilder","synthetic":true,"types":[]},{"text":"impl Send for CupsBuilder","synthetic":true,"types":[]},{"text":"impl Send for IppError","synthetic":true,"types":[]},{"text":"impl Send for IppClientBuilder","synthetic":true,"types":[]},{"text":"impl Send for IppClient","synthetic":true,"types":[]},{"text":"impl Send for IppVersion","synthetic":true,"types":[]},{"text":"impl Send for Operation","synthetic":true,"types":[]},{"text":"impl Send for PrinterState","synthetic":true,"types":[]},{"text":"impl Send for Orientation","synthetic":true,"types":[]},{"text":"impl Send for PrintQuality","synthetic":true,"types":[]},{"text":"impl Send for Finishings","synthetic":true,"types":[]},{"text":"impl Send for JobState","synthetic":true,"types":[]},{"text":"impl Send for DelimiterTag","synthetic":true,"types":[]},{"text":"impl Send for ValueTag","synthetic":true,"types":[]},{"text":"impl Send for StatusCode","synthetic":true,"types":[]},{"text":"impl Send for CupsGetPrinters","synthetic":true,"types":[]},{"text":"impl Send for CupsDeletePrinter","synthetic":true,"types":[]},{"text":"impl Send for PrintJob","synthetic":true,"types":[]},{"text":"impl Send for GetPrinterAttributes","synthetic":true,"types":[]},{"text":"impl Send for CreateJob","synthetic":true,"types":[]},{"text":"impl Send for SendDocument","synthetic":true,"types":[]},{"text":"impl Send for IppParseError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for AsyncIppParser&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for IppParser&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for IppPayload","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for AsyncIppReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for IppReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for IppRequestResponse","synthetic":true,"types":[]},{"text":"impl Send for IppValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IppValueIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IppHeader","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()